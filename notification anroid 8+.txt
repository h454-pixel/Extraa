package com.example.retrofit1;

import androidx.annotation.Nullable;
import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.NotificationCompat;

import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Intent;
import android.graphics.Bitmap;
import android.os.Build;
import android.os.Bundle;
import android.provider.MediaStore;
import android.speech.tts.TextToSpeech;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;

import java.util.Locale;

public class FacebookLogin extends AppCompatActivity {


    Button speakBtn;
    EditText speakText;
    TextToSpeech textToSpeech;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_facebook_login);
        speakBtn = (Button) findViewById(R.id.btnSpeech);
        speakBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // make the channel. The method has been discussed before.
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
                    makeNotificationChannel("CHANNEL_1", "Example channel", NotificationManager.IMPORTANCE_DEFAULT);
                }
                // the check ensures that the channel will only be made
                // if the device is running Android 8+

                NotificationCompat.Builder notification =
                        new NotificationCompat.Builder(FacebookLogin.this, "CHANNEL_1");
                // the second parameter is the channel id.
                // it should be the same as passed to the makeNotificationChannel() method

                notification
                        .setSmallIcon(R.mipmap.ic_launcher) // can use any other icon
                        .setContentTitle("Notification!")
                        .setContentText("This is an Oreo notification!")
                        .setNumber(3); // this shows a number in the notification dots

                // Set the intent to fire when the user taps on notification.
                Intent resultIntent = new Intent(FacebookLogin.this, MainActivity.class);
                PendingIntent pendingIntent = PendingIntent.getActivity(FacebookLogin.this, 0, resultIntent, 0);
                notification.setContentIntent(pendingIntent);



                NotificationManager notificationManager =
                        (NotificationManager)getSystemService(NOTIFICATION_SERVICE);

                assert notificationManager != null;
                notificationManager.notify(1, notification.build());
                // it is better to not use 0 as notification id, so used 1
            }

            @RequiresApi(api = Build.VERSION_CODES.O)
            void makeNotificationChannel(String id, String name, int importance)
            {
                NotificationChannel channel = new NotificationChannel(id, name, importance);
                channel.setShowBadge(true); // set false to disable badges, Oreo exclusive

                NotificationManager notificationManager =
                        (NotificationManager)getSystemService(NOTIFICATION_SERVICE);

                assert notificationManager != null;
                notificationManager.createNotificationChannel(channel);
            }
        });


    }
}
